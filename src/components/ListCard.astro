---
import type { TSong } from '../types/members';
import MusicPlatformLinks from './MusicPlatformLinks.astro';

export interface Props {
  icon: any;
  title: string;
  items: string[] | TSong[];
  class?: string;
}

const { icon: Icon, title, items, class: className } = Astro.props;

const isSong = (item: string | TSong): item is TSong => {
  return (
    typeof item === 'object' &&
    item !== null &&
    'title' in item &&
    'links' in item
  );
};
---

<div class={`rounded-2xl bg-white p-4 drop-shadow-md ${className || ''}`} data-testid={`list-card-${title.toLowerCase().replace(' ', '-')}`}>
  <div class="mb-2 flex items-center gap-2">
    <Icon width={18} height={18} />
    <p class="text-magenta font-bold">{title}</p>
  </div>

  <ul class="marker:text-magenta ml-4 list-outside list-disc">
    {
      items.map((item) => (
        <li>
          <div class="flex flex-wrap items-center gap-2">
            <span>{isSong(item) ? item.title : item}</span>

            {isSong(item) && (
              <MusicPlatformLinks links={item.links} songTitle={item.title} />
            )}
          </div>
        </li>
      ))
    }
  </ul>
</div>
