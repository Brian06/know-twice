---
import MemberCard from './MemberCard.astro';
import CenteredLogo from './CenteredLogo.astro';
import MemberImages from './MemberImages.astro';
import { MEMBERS } from '../const/members';
import { getHoverClass } from '../utils/styles';
import type { TmemberId } from '../types/member-derived';

const firstColumn = MEMBERS.slice(0, 3);
const secondColumn = MEMBERS.slice(3, 6);
const thirdColumn = MEMBERS.slice(6, 9);
---

<section class="relative flex min-h-screen w-full p-2 pt-17 md:p-4 md:pt-20">
  <div class="relative flex w-full flex-col items-center text-center">
    <CenteredLogo />
    <MemberImages />

    <!-- Member Selection Grid -->

    <div
      class="relative flex h-full w-full max-w-6xl flex-col items-center justify-end gap-8 sm:p-4"
    >
      <!-- Mobile: 3x3 grid layout -->
      <div
        id="member-grid"
        class="xs:gap-2 grid w-full grid-cols-3 grid-rows-3 justify-items-center gap-1 sm:gap-4 md:hidden"
      >
        {
          MEMBERS.map(({ id }, index) => (
            <MemberCard
              id={id}
              extraClasses={`${getHoverClass(id as TmemberId)} animate-fade-in-up animate-delay-${(index + 1) * 100}`}
              src={`/images/members/cards/${id}.webp`}
              alt={id}
            />
          ))
        }
      </div>

      <!-- Desktop: original layout -->
      <div
        class="relative hidden md:grid md:min-w-0 md:grid-cols-3 md:grid-rows-2 md:gap-0"
      >
        <div>
          <div
            class="flex flex-row justify-around gap-2 md:justify-end lg:gap-4"
          >
            {
              firstColumn.map(({ id }, index) => (
                <MemberCard
                  id={id}
                  extraClasses={`${getHoverClass(id as TmemberId)} animate-fade-in-right animate-delay-${(index + 1) * 100}`}
                  src={`/images/members/cards/${id}.webp`}
                  alt={id}
                />
              ))
            }
          </div>
        </div>
        <div class="md:col-start-2 md:row-start-2">
          <div
            class="flex flex-row justify-around gap-2 md:justify-center lg:gap-4"
          >
            {
              secondColumn.map(({ id }, index) => (
                <MemberCard
                  id={id}
                  extraClasses={`${getHoverClass(id as TmemberId)} animate-fade-in-up animate-delay-${(index + 1) * 100}`}
                  src={`/images/members/cards/${id}.webp`}
                  alt={id}
                />
              ))
            }
          </div>
        </div>
        <div class="md:col-start-3 md:row-start-1">
          <div
            class="flex flex-row justify-around gap-2 md:justify-start lg:gap-4"
          >
            {
              thirdColumn.map(({ id }, index) => (
                <MemberCard
                  id={id}
                  extraClasses={`${getHoverClass(id as TmemberId)} animate-fade-in-left animate-delay-${(index + 1) * 100}`}
                  src={`/images/members/cards/${id}.webp`}
                  alt={id}
                />
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { $ } from '../utils/dom-selector';
  let currentMemberId: string | null = null;

  const handleMemberCardHover = () => {
    document.addEventListener('member-card-hover', (event: Event) => {
      const customEvent = event as CustomEvent<{ id: string }>;
      const id = customEvent.detail.id;
      const newMemberImage = $(`[data-id='full-image-${id}']`);
      const centeredLogo = $('.js-center-logo');

      if (currentMemberId === id) return;

      if (currentMemberId) {
        const currentMemberImage = $(`[data-id='full-image-${currentMemberId}']`);
        currentMemberImage?.classList.add('hidden');
      }

      newMemberImage?.classList.remove('animate-fade-out-down', 'hidden');
      newMemberImage?.classList.add('animate-fade-in-up');
      centeredLogo?.classList.add('hidden');

      currentMemberId = id;
    });
  }

  const handleMemberCardExit = () => {
    document.addEventListener('member-card-exit', () => {
      if (currentMemberId) {
        const currentMemberImage = $(`[data-id='full-image-${currentMemberId}']`);
        const centeredLogo = $('.js-center-logo');

        currentMemberImage?.classList.add('animate-fade-out-down');
        centeredLogo?.classList.remove('hidden');

        currentMemberId = null;
      }
    });
  }

  document.addEventListener('astro:page-load', () => {
    handleMemberCardHover();
    handleMemberCardExit();
  })
</script>
